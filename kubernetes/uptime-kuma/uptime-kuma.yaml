apiVersion: v1
kind: Namespace
metadata:
  name: uptime-kuma
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: uptime-kuma
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: uptime-kuma
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: uptime-kuma
    spec:
      containers:
        - image: louislam/uptime-kuma:1
          name: uptime-kuma
          ports:
            - containerPort: 3001
          resources: {}
          volumeMounts:
            - mountPath: /app/data
              name: uptime-kuma-vol0
      restartPolicy: Always
      volumes:
        - name: uptime-kuma-vol0
          persistentVolumeClaim:
            claimName: uptime-kuma-vol0
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: uptime-kuma
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 3001
  selector:
    io.kompose.service: uptime-kuma
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: uptime-kuma
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  rules:
    - host: uptimekuma.lan
      http:
        paths:
          - backend:
              service:
                name: uptime-kuma
                port:
                  number: 80
            path: /
            pathType: Prefix